substitutions:
  name: controller047
  description: Drain Sump

# Enable logging
logger:

packages:
  base: !include include/base.yaml
  wifi: !include include/wifi_not.yaml

esphome:
  name: $name
  comment: $description
  platform: ESP8266
  board: d1_mini
  on_boot:
    priority: -100
    then:
      - script.execute: start_drain_pump

status_led:
  pin: GPIO2

globals:

  - id: enabled
    type: bool
    restore_value: yes
    initial_value: 'true'

script:
  - id: start_drain_pump
    then:
      - if:
          condition:
            and:
              - binary_sensor.is_off: reservoir_empty_sensor
              - binary_sensor.is_on: reservoir_full_sensor
              - lambda: |-
                  return id(enabled);
          then:
            - switch.turn_on: relay_1
      - if:
          condition:
            and:
              - binary_sensor.is_on: reservoir_empty_sensor
          then:
            - switch.turn_off: relay_1

binary_sensor:

  - platform: template
    name: $description Enabled
    lambda: |-
      return id(enabled);

  - platform: gpio
    id: reservoir_full_sensor
    name: $description Reservoir Full Sensor
    pin:
      number: D1
      mode: INPUT_PULLUP
    filters:
      - delayed_on_off: 500ms
    on_press:
      then:
        - script.execute: start_drain_pump

  - platform: gpio
    id: reservoir_empty_sensor
    name: $description Reservoir Empty Sensor
    pin:
      number: D6
      mode: INPUT_PULLUP
    filters:
      - invert:
      - delayed_on_off: 500ms
    on_press:
      then:
        - script.execute: start_drain_pump

switch:

  - platform: gpio
    id: relay_1
    pin: D2

  - platform: template
    name: $description Pump
    id: relay_1_pub
    lambda: |-
      if (id(relay_1).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            - lambda: |-
                return id(enabled);
          then:
            - switch.turn_on: relay_1
    turn_off_action:
      then:
        - switch.turn_off: relay_1

api:
  services:

    - service: toggle_enable
      then:
        - if:
            condition:
              - lambda: |-
                  return id(enabled);
            then:
              - switch.turn_off: relay_1
              - globals.set:
                  id: enabled
                  value: 'false'
            else:
              - globals.set:
                  id: enabled
                  value: 'true'
