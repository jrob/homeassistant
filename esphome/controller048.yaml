substitutions:
  name: controller048
  description: Daphnia ATO WC
  static_ip: ""

# Enable logging
logger:

<<: !include include/common.yaml

esphome:
  name: $name
  comment: $description
  platform: ESP8266
  board: d1_mini
  esp8266_restore_from_flash: true

status_led:
  pin: GPIO2

globals:

  - id: error_fill_pump_duration_exceeded
    type: bool
    restore_value: yes
    initial_value: 'false'

  - id: enabled
    type: bool
    restore_value: yes
    initial_value: 'true'

script:

  - id: set_fill_pump_duration_exceeded
    then:
      - delay: 10min
      - globals.set:
          id: error_fill_pump_duration_exceeded
          value: 'true'
      - switch.turn_off: relay_1

binary_sensor:

  - platform: template
    name: $description Error Fill Duration Exceeded
    lambda: |-
      return id(error_fill_pump_duration_exceeded);

  - platform: template
    name: $description Enabled
    lambda: |-
      return id(enabled);

  - platform: gpio
    id: reservoir_full_sensor
    name: $description Reservoir Full Sensor
    pin:
      number: D1
      mode: INPUT_PULLUP
    filters:
      - delayed_on_off: 1000ms
    on_press:
      then:
        - switch.turn_off: relay_1
        - script.stop: set_fill_pump_duration_exceeded
    on_release:
      - if:
          condition:
            - lambda: |-
                return id(enabled) && !id(error_fill_pump_duration_exceeded);
          then:
            - switch.turn_on: relay_1
            - script.execute: set_fill_pump_duration_exceeded

switch:

  - platform: gpio
    id: relay_1
    pin: D2
    name: $description Valve

  # 98 ml per minute - Peristaltic pump
  # 728 ml per minute, 90s, 1092 ml, gikfun diaphram pump
  - platform: gpio
    id: relay_2
    pin: D7
    #name: $description Pump
    #on_turn_on:
      #- if:
          #condition:
            #- lambda: |-
                #return !id(enabled);
          #then:
            #- delay: 1ms
            #- switch.turn_off: relay_2

  - platform: template
    name: $description Pump
    id: relay_2_pub
    lambda: |-
      if (id(relay_2).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            - lambda: |-
                return id(enabled);
          then:
            - switch.turn_on: relay_2
    turn_off_action:
      then:
        - switch.turn_off: relay_2

api:
  services:

    - service: reset_error_fill_pump_duration_exceeded
      then:
        - logger.log:
            format: "Reseting pump duration error"
        - globals.set:
            id: error_fill_pump_duration_exceeded
            value: 'false'

    - service: toggle_enable
      then:
        - if:
            condition:
              - lambda: |-
                  return id(enabled);
            then:
              - switch.turn_off: relay_1
              - switch.turn_off: relay_2
              - globals.set:
                  id: enabled
                  value: 'false'
            else:
              - globals.set:
                  id: enabled
                  value: 'true'
