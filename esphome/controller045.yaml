substitutions:
  name: controller045
  description: Water Monitor and Cutoff

<<: !include include/common.yaml

esphome:
  name: $name
  comment: $description

esp32:
  board: nodemcu-32s

# Enable logging
logger:

globals:

  - id: error_flow_duration_exceeded
    type: bool
    restore_value: yes
    initial_value: 'false'

  - id: enabled
    type: bool
    restore_value: yes
    initial_value: 'true'

number:
  - platform: template
    name: Error delay (m)
    id: error_delay
    icon: mdi:numeric
    restore_value: true
    initial_value: 5
    optimistic: true
    min_value: 1
    step: 1
    max_value: 120

script:

  - id: set_flow_duration_exceeded
    then:
      - delay: !lambda "return id(error_delay).state * 1000 * 60;"
      - globals.set:
          id: error_flow_duration_exceeded
          value: 'true'
      - switch.turn_off: relay_valve

switch:

  - platform: template
    name: $description Error
    icon: mdi:alert
    lambda: |-
      return id(error_flow_duration_exceeded);
    turn_off_action:
      then:
        - globals.set:
            id: error_flow_duration_exceeded
            value: 'false'

  - platform: gpio
    id: relay_valve
    pin: GPIO32
    restore_mode: RESTORE_DEFAULT_OFF

  - platform: template
    name: $description Valve
    id: relay_valve_pub
    icon: mdi:pipe-valve
    lambda: |-
      return id(relay_valve).state;
    turn_on_action:
      - if:
          condition:
            - lambda: |-
                return id(enabled);
          then:
            - switch.turn_on: relay_valve
    turn_off_action:
      then:
        - switch.turn_off: relay_valve

sensor:

    # https://www.digiten.shop/products/digiten-1-4-quick-connect-0-3-10l-min-water-hall-effect-flow-sensor-meter
    # Frequency: F=36 * Q (L / Min) error: Â± 2%
    # Pulses per liter 2160 = 36 * 60

    # using 1902 pulses per liter
    # 613 g
    # 1170 total pulses
    # 0.62368 measured by sensor

    # using 1904 pulses per liter
    # 610 g
    # 1185 total pulses
    # 0.62237 measured by sensor

# 'Water Monitor and Cutoff Water LPM': Total : 312 pulses
# 21:58:55	[D]	[sensor:125]
# 'Water Monitor and Cutoff Total Liters': Sending state 0.16387 L with 1 decimals of accuracy
# 21:59:01	[D]	[pulse_counter:162]
# 'Water Monitor and Cutoff Water LPM': Retrieved counter: 320.00 pulses/min
# 21:59:01	[D]	[sensor:125]
# 'Water Monitor and Cutoff Water LPM': Sending state 1.68067 lpm with 1 decimals of accuracy
# 21:59:01	[D]	[pulse_counter:168]
# 'Water Monitor and Cutoff Water LPM': Total : 344 pulses
# 21:59:01	[D]	[sensor:125]


  - platform: pulse_counter
    id: water_lpm
    icon: mdi:speedometer
    pin: GPIO34
    update_interval: 6s
    unit_of_measurement: lpm
    name: $description Water LPM
    accuracy_decimals: 1
    filters:
      - lambda: return x / 1904 * (60 / 6) / 10;
    total:
      name: $description Total Liters
      unit_of_measurement: L # Liters
      accuracy_decimals: 2
      filters:
        - lambda: return x / 1904;

binary_sensor:

  - platform: template
    name: $description Flow Duration Exceeded
    lambda: |-
      return id(error_flow_duration_exceeded);

  - platform: template
    name: $description Water Flowing
    lambda: |-
      if (id(water_lpm).state > 0) {
        // Water is flowing.
        return true;
      } else {
        // Water is not flowing.
        return false;
      }
    on_press:
      - script.execute: set_flow_duration_exceeded
    on_release:
      - script.stop: set_flow_duration_exceeded

api:

  services:

    - service: reset_error_flow_duration_exceeded
      then:
        - logger.log:
            format: "Reseting flow duration error"
        - globals.set:
            id: error_flow_duration_exceeded
            value: 'false'
