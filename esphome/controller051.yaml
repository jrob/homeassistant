substitutions:
  name: controller051
  description: Aquarium 02
  static_ip: ""

# Enable logging
logger:

<<: !include include/common.yaml

esphome:
  name: $name
  comment: $description
  platform: ESP32
  board: esp32doit-devkit-v1

globals:

  - id: enabled
    type: bool
    restore_value: yes
    initial_value: 'true'

light:
  - platform: monochromatic
    name: $description Light
    output: output_gpio_33
    restore_mode: ALWAYS_OFF

output:
  - platform: ledc
    pin: GPIO33
    id: output_gpio_33

binary_sensor:

  - platform: template
    name: $description Enabled
    lambda: |-
      return id(enabled);

  - platform: gpio
    id: reservoir_full_sensor
    name: $description Full Sensor
    pin:
      number: GPIO27
      mode: INPUT_PULLUP
    filters:
      - delayed_on_off: 1000ms

switch:

  - platform: gpio
    id: relay_valve
    pin: GPIO17
    restore_mode: ALWAYS_OFF

  - platform: template
    name: $description Valve
    id: relay_valve_pub
    lambda: |-
      if (id(relay_valve).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            - lambda: |-
                return id(enabled);
          then:
            - switch.turn_on: relay_valve
    turn_off_action:
      then:
        - switch.turn_off: relay_valve


  # xxx ml per minute, xxs, xxxx ml, gikfun diaphram pump
  - platform: gpio
    id: relay_pump
    pin: GPIO16
    restore_mode: ALWAYS_OFF

  - platform: template
    name: $description Pump
    id: relay_pump_pub
    lambda: |-
      if (id(relay_pump).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - if:
          condition:
            - lambda: |-
                return id(enabled);
          then:
            - switch.turn_on: relay_pump
    turn_off_action:
      then:
        - switch.turn_off: relay_pump

dallas:
  - pin: GPIO26

sensor:
  - platform: dallas
    address: 0x2D011921144A0228
    name: $description Temperature

api:
  services:

    - service: toggle_enable
      then:
        - if:
            condition:
              - lambda: |-
                  return id(enabled);
            then:
              - switch.turn_off: relay_1
              - switch.turn_off: relay_2
              - globals.set:
                  id: enabled
                  value: 'false'
            else:
              - globals.set:
                  id: enabled
                  value: 'true'
